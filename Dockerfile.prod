#Docker multi-stage build to reduce the final image size. 
#Builder is a temporary image that's used for building the Python wheels. 
#The wheels are then copied over to the final production image and the builder image is discarded.

###########
# BUILDER #
###########

# pull official base image
FROM python:3.10.8 as builder

# set environment variables
ENV PYTHONUNBUFFERED=1

# set work directory
WORKDIR /usr/src/app

# lint
RUN pip install --upgrade pip
RUN pip install flake8
COPY . .
RUN flake8 --ignore=E501,F401 ./health_tourism_hub

# install dependencies
COPY requirements.txt requirements.txt
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/app/wheels -r requirements.txt

#########
# FINAL #
#########

# pull official base image
FROM python:3.10.8 

# create directory for the app user
RUN mkdir -p /home/app

# create the app user
RUN adduser --system --group app

# create the appropriate directories
ENV HOME=/home/app
ENV APP_HOME=/home/app/health-tourism-hub
RUN mkdir $APP_HOME
RUN mkdir $APP_HOME/staticfiles
RUN mkdir $APP_HOME/mediafiles
WORKDIR $APP_HOME

# install dependencies
# RUN apt update && apt add libpq
COPY --from=builder /usr/src/app/wheels /wheels
COPY --from=builder /usr/src/app/requirements.txt .
RUN pip install --no-cache /wheels/*

# copy entrypoint.prod.sh
COPY ./entrypoint.prod.sh .
RUN sed -i 's/\r$//g'  $APP_HOME/entrypoint.prod.sh
RUN chmod +x  $APP_HOME/entrypoint.prod.sh

# copy project
COPY . $APP_HOME

# chown all the files to the app user
RUN chown -R app:app $APP_HOME

# change to the app user
USER app

# run entrypoint.prod.sh
ENTRYPOINT ["sh","/home/app/health-tourism-hub/entrypoint.prod.sh"]

# ENTRYPOINT ["sh","/home/app/health-
# tourism-hub/entrypoint.prod.sh"]